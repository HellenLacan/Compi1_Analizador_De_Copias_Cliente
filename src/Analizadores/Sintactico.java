
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Tue Apr 03 13:43:19 CST 2018
//----------------------------------------------------

package Analizadores;

import java_cup.runtime.Symbol;
import java.util.ArrayList;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Tue Apr 03 13:43:19 CST 2018
  */
public class Sintactico extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintactico() {super();}

  /** Constructor which sets the default scanner. */
  public Sintactico(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintactico(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\247\000\002\002\004\000\002\002\003\000\002\004" +
    "\006\000\002\005\013\000\002\005\013\000\002\005\012" +
    "\000\002\006\012\000\002\015\016\000\002\015\015\000" +
    "\002\015\017\000\002\015\016\000\002\007\004\000\002" +
    "\007\003\000\002\010\005\000\002\010\005\000\002\010" +
    "\006\000\002\010\003\000\002\010\003\000\002\010\003" +
    "\000\002\010\003\000\002\010\003\000\002\010\003\000" +
    "\002\010\003\000\002\010\007\000\002\010\003\000\002" +
    "\013\012\000\002\013\013\000\002\013\011\000\002\013" +
    "\012\000\002\042\007\000\002\042\006\000\002\042\010" +
    "\000\002\042\007\000\002\043\004\000\002\043\003\000" +
    "\002\045\012\000\002\045\011\000\002\047\004\000\002" +
    "\047\004\000\002\047\005\000\002\047\005\000\002\047" +
    "\005\000\002\047\005\000\002\047\006\000\002\047\006" +
    "\000\002\031\013\000\002\031\012\000\002\031\012\000" +
    "\002\031\011\000\002\012\013\000\002\012\012\000\002" +
    "\012\012\000\002\012\011\000\002\012\013\000\002\012" +
    "\012\000\002\012\012\000\002\012\011\000\002\012\013" +
    "\000\002\012\012\000\002\012\012\000\002\012\011\000" +
    "\002\012\013\000\002\012\012\000\002\012\012\000\002" +
    "\012\011\000\002\012\013\000\002\012\012\000\002\012" +
    "\012\000\002\012\011\000\002\012\013\000\002\012\012" +
    "\000\002\012\012\000\002\012\011\000\002\027\004\000" +
    "\002\027\003\000\002\044\003\000\002\044\003\000\002" +
    "\034\004\000\002\034\003\000\002\035\007\000\002\035" +
    "\007\000\002\035\007\000\002\035\005\000\002\035\004" +
    "\000\002\035\005\000\002\035\005\000\002\035\006\000" +
    "\002\035\006\000\002\035\006\000\002\035\006\000\002" +
    "\035\006\000\002\035\006\000\002\035\004\000\002\035" +
    "\003\000\002\052\005\000\002\052\012\000\002\052\007" +
    "\000\002\037\005\000\002\037\006\000\002\037\007\000" +
    "\002\037\007\000\002\037\007\000\002\037\003\000\002" +
    "\037\004\000\002\037\005\000\002\037\005\000\002\037" +
    "\005\000\002\041\005\000\002\041\005\000\002\041\005" +
    "\000\002\041\005\000\002\041\005\000\002\041\005\000" +
    "\002\041\005\000\002\041\004\000\002\041\005\000\002" +
    "\041\005\000\002\041\005\000\002\024\004\000\002\024" +
    "\003\000\002\026\003\000\002\026\003\000\002\026\003" +
    "\000\002\017\005\000\002\020\003\000\002\020\003\000" +
    "\002\025\005\000\002\023\005\000\002\032\005\000\002" +
    "\032\005\000\002\032\005\000\002\032\005\000\002\032" +
    "\004\000\002\032\003\000\002\032\003\000\002\032\003" +
    "\000\002\032\003\000\002\032\003\000\002\032\003\000" +
    "\002\032\003\000\002\032\005\000\002\036\003\000\002" +
    "\036\003\000\002\036\003\000\002\036\003\000\002\036" +
    "\003\000\002\036\003\000\002\016\003\000\002\016\003" +
    "\000\002\016\003\000\002\016\003\000\002\016\003\000" +
    "\002\016\003\000\002\016\003\000\002\021\003\000\002" +
    "\021\003\000\002\021\003\000\002\022\003\000\002\022" +
    "\003\000\002\022\003\000\002\022\003\000\002\022\003" +
    "\000\002\022\003\000\002\022\003\000\002\022\003\000" +
    "\002\022\003\000\002\022\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u01bc\000\004\075\005\001\002\000\004\002\000\001" +
    "\002\000\004\004\010\001\002\000\004\002\007\001\002" +
    "\000\004\002\001\001\002\000\004\077\011\001\002\000" +
    "\004\075\013\001\002\000\004\002\uffff\001\002\000\004" +
    "\005\014\001\002\000\004\077\015\001\002\000\016\040" +
    "\027\075\026\113\024\114\016\115\022\146\017\001\002" +
    "\000\022\040\uffed\075\uffed\113\uffed\114\uffed\115\uffed\132" +
    "\uffed\133\uffed\146\uffed\001\002\000\004\146\u0148\001\002" +
    "\000\016\040\027\075\u0143\113\024\114\016\115\022\146" +
    "\017\001\002\000\022\040\ufff1\075\ufff1\113\ufff1\114\ufff1" +
    "\115\ufff1\132\ufff1\133\ufff1\146\ufff1\001\002\000\022\040" +
    "\uffec\075\uffec\113\uffec\114\uffec\115\uffec\132\uffec\133\uffec" +
    "\146\uffec\001\002\000\004\075\u013e\001\002\000\022\040" +
    "\uffe9\075\uffe9\113\uffe9\114\uffe9\115\uffe9\132\uffe9\133\uffe9" +
    "\146\uffe9\001\002\000\022\040\uffef\075\uffef\113\uffef\114" +
    "\uffef\115\uffef\132\uffef\133\uffef\146\uffef\001\002\000\034" +
    "\007\043\010\042\011\041\012\037\013\036\014\035\015" +
    "\044\016\047\022\040\023\034\024\046\025\045\033\033" +
    "\001\002\000\022\040\uffeb\075\uffeb\113\uffeb\114\uffeb\115" +
    "\uffeb\132\uffeb\133\uffeb\146\uffeb\001\002\000\022\040\uffee" +
    "\075\uffee\113\uffee\114\uffee\115\uffee\132\uffee\133\uffee\146" +
    "\uffee\001\002\000\022\040\ufff0\075\ufff0\113\ufff0\114\ufff0" +
    "\115\ufff0\132\ufff0\133\ufff0\146\ufff0\001\002\000\022\040" +
    "\ufff5\075\ufff5\113\ufff5\114\ufff5\115\ufff5\132\ufff5\133\ufff5" +
    "\146\ufff5\001\002\000\006\005\u0114\025\101\001\002\000" +
    "\014\071\055\072\052\073\057\074\051\077\u0100\001\002" +
    "\000\014\071\055\072\052\073\057\074\051\077\353\001" +
    "\002\000\014\071\055\072\052\073\057\074\051\077\326" +
    "\001\002\000\014\071\055\072\052\073\057\074\051\077" +
    "\301\001\002\000\014\071\055\072\052\073\057\074\051" +
    "\077\254\001\002\000\014\071\055\072\052\073\057\074" +
    "\051\077\227\001\002\000\014\071\055\072\052\073\057" +
    "\074\051\077\202\001\002\000\014\071\055\072\052\073" +
    "\057\074\051\077\155\001\002\000\004\077\146\001\002" +
    "\000\004\077\145\001\002\000\004\077\144\001\002\000" +
    "\014\071\055\072\052\073\057\074\051\077\062\001\002" +
    "\000\014\071\uff89\072\uff89\073\uff89\074\uff89\077\uff89\001" +
    "\002\000\004\103\142\001\002\000\004\103\uff84\001\002" +
    "\000\004\103\140\001\002\000\014\071\uff88\072\uff88\073" +
    "\uff88\074\uff88\077\uff88\001\002\000\004\103\uff85\001\002" +
    "\000\014\071\uff87\072\uff87\073\uff87\074\uff87\077\uff87\001" +
    "\002\000\004\103\136\001\002\000\014\071\uff8a\072\uff8a" +
    "\073\uff8a\074\uff8a\077\uff8a\001\002\000\014\071\055\072" +
    "\052\073\057\074\051\077\132\001\002\000\006\075\065" +
    "\147\066\001\002\000\006\075\uffdf\147\uffdf\001\002\000" +
    "\006\075\065\147\130\001\002\000\004\021\067\001\002" +
    "\000\022\040\uffe3\075\uffe3\113\uffe3\114\uffe3\115\uffe3\132" +
    "\uffe3\133\uffe3\146\uffe3\001\002\000\004\077\070\001\002" +
    "\000\010\026\071\027\074\075\073\001\002\000\020\040" +
    "\027\075\076\113\024\114\016\115\022\133\124\146\017" +
    "\001\002\000\010\026\110\027\112\075\111\001\002\000" +
    "\004\033\105\001\002\000\020\040\027\075\076\113\024" +
    "\114\016\115\022\132\077\146\017\001\002\000\020\040" +
    "\027\075\076\113\024\114\016\115\022\132\103\146\017" +
    "\001\002\000\032\007\043\010\042\011\041\012\037\013" +
    "\036\014\035\016\047\022\040\023\034\024\046\025\045" +
    "\033\100\001\002\000\010\026\uffdc\027\uffdc\075\uffdc\001" +
    "\002\000\004\025\101\001\002\000\004\077\102\001\002" +
    "\000\022\040\ufff2\075\ufff2\113\ufff2\114\ufff2\115\ufff2\132" +
    "\ufff2\133\ufff2\146\ufff2\001\002\000\010\026\uffda\027\uffda" +
    "\075\uffda\001\002\000\022\040\ufff6\075\ufff6\113\ufff6\114" +
    "\ufff6\115\ufff6\132\ufff6\133\ufff6\146\ufff6\001\002\000\004" +
    "\021\106\001\002\000\004\077\107\001\002\000\006\075" +
    "\uffdd\147\uffdd\001\002\000\020\040\027\075\076\113\024" +
    "\114\016\115\022\133\121\146\017\001\002\000\004\033" +
    "\116\001\002\000\020\040\027\075\076\113\024\114\016" +
    "\115\022\132\114\146\017\001\002\000\020\040\027\075" +
    "\076\113\024\114\016\115\022\132\115\146\017\001\002" +
    "\000\010\026\uffd8\027\uffd8\075\uffd8\001\002\000\010\026" +
    "\uffd6\027\uffd6\075\uffd6\001\002\000\004\021\117\001\002" +
    "\000\004\077\120\001\002\000\006\075\uffde\147\uffde\001" +
    "\002\000\010\026\uffd7\027\uffd7\075\uffd7\001\002\000\020" +
    "\040\027\075\076\113\024\114\016\115\022\133\123\146" +
    "\017\001\002\000\010\026\uffd5\027\uffd5\075\uffd5\001\002" +
    "\000\010\026\uffdb\027\uffdb\075\uffdb\001\002\000\020\040" +
    "\027\075\076\113\024\114\016\115\022\133\126\146\017" +
    "\001\002\000\010\026\uffd9\027\uffd9\075\uffd9\001\002\000" +
    "\006\075\uffe0\147\uffe0\001\002\000\022\040\uffe1\075\uffe1" +
    "\113\uffe1\114\uffe1\115\uffe1\132\uffe1\133\uffe1\146\uffe1\001" +
    "\002\000\014\071\uff8b\072\uff8b\073\uff8b\074\uff8b\077\uff8b" +
    "\001\002\000\006\075\065\147\134\001\002\000\006\075" +
    "\065\147\135\001\002\000\022\040\uffe4\075\uffe4\113\uffe4" +
    "\114\uffe4\115\uffe4\132\uffe4\133\uffe4\146\uffe4\001\002\000" +
    "\022\040\uffe2\075\uffe2\113\uffe2\114\uffe2\115\uffe2\132\uffe2" +
    "\133\uffe2\146\uffe2\001\002\000\004\115\137\001\002\000" +
    "\014\071\uff83\072\uff83\073\uff83\074\uff83\077\uff83\001\002" +
    "\000\004\115\141\001\002\000\014\071\uff86\072\uff86\073" +
    "\uff86\074\uff86\077\uff86\001\002\000\004\115\143\001\002" +
    "\000\014\071\uff82\072\uff82\073\uff82\074\uff82\077\uff82\001" +
    "\002\000\022\040\ufff4\075\ufff4\113\ufff4\114\ufff4\115\ufff4" +
    "\132\ufff4\133\ufff4\146\ufff4\001\002\000\022\040\ufff3\075" +
    "\ufff3\113\ufff3\114\ufff3\115\ufff3\132\ufff3\133\ufff3\146\ufff3" +
    "\001\002\000\016\040\027\075\076\113\024\114\016\115" +
    "\022\146\017\001\002\000\016\040\027\075\150\113\024" +
    "\114\016\115\022\146\017\001\002\000\032\007\043\010" +
    "\042\011\041\012\037\013\036\014\035\016\047\022\040" +
    "\023\034\024\046\025\045\033\151\001\002\000\006\015" +
    "\152\025\101\001\002\000\004\077\153\001\002\000\004" +
    "\075\ufffb\001\002\000\014\071\055\072\052\073\057\074" +
    "\051\077\167\001\002\000\016\040\027\075\157\113\024" +
    "\114\016\115\022\146\017\001\002\000\016\040\027\075" +
    "\163\113\024\114\016\115\022\146\017\001\002\000\032" +
    "\007\043\010\042\011\041\012\037\013\036\014\035\016" +
    "\047\022\040\023\034\024\046\025\045\033\160\001\002" +
    "\000\006\007\161\025\101\001\002\000\004\077\162\001" +
    "\002\000\022\040\uffcd\075\uffcd\113\uffcd\114\uffcd\115\uffcd" +
    "\132\uffcd\133\uffcd\146\uffcd\001\002\000\032\007\043\010" +
    "\042\011\041\012\037\013\036\014\035\016\047\022\040" +
    "\023\034\024\046\025\045\033\164\001\002\000\006\007" +
    "\165\025\101\001\002\000\004\077\166\001\002\000\022" +
    "\040\uffcf\075\uffcf\113\uffcf\114\uffcf\115\uffcf\132\uffcf\133" +
    "\uffcf\146\uffcf\001\002\000\016\040\027\075\171\113\024" +
    "\114\016\115\022\146\017\001\002\000\016\040\027\075" +
    "\175\113\024\114\016\115\022\146\017\001\002\000\032" +
    "\007\043\010\042\011\041\012\037\013\036\014\035\016" +
    "\047\022\040\023\034\024\046\025\045\033\172\001\002" +
    "\000\006\007\173\025\101\001\002\000\004\077\174\001" +
    "\002\000\022\040\uffce\075\uffce\113\uffce\114\uffce\115\uffce" +
    "\132\uffce\133\uffce\146\uffce\001\002\000\032\007\043\010" +
    "\042\011\041\012\037\013\036\014\035\016\047\022\040" +
    "\023\034\024\046\025\045\033\176\001\002\000\006\007" +
    "\177\025\101\001\002\000\004\077\200\001\002\000\022" +
    "\040\uffd0\075\uffd0\113\uffd0\114\uffd0\115\uffd0\132\uffd0\133" +
    "\uffd0\146\uffd0\001\002\000\014\071\055\072\052\073\057" +
    "\074\051\077\214\001\002\000\016\040\027\075\204\113" +
    "\024\114\016\115\022\146\017\001\002\000\016\040\027" +
    "\075\210\113\024\114\016\115\022\146\017\001\002\000" +
    "\032\007\043\010\042\011\041\012\037\013\036\014\035" +
    "\016\047\022\040\023\034\024\046\025\045\033\205\001" +
    "\002\000\006\010\206\025\101\001\002\000\004\077\207" +
    "\001\002\000\022\040\uffc9\075\uffc9\113\uffc9\114\uffc9\115" +
    "\uffc9\132\uffc9\133\uffc9\146\uffc9\001\002\000\032\007\043" +
    "\010\042\011\041\012\037\013\036\014\035\016\047\022" +
    "\040\023\034\024\046\025\045\033\211\001\002\000\006" +
    "\010\212\025\101\001\002\000\004\077\213\001\002\000" +
    "\022\040\uffcb\075\uffcb\113\uffcb\114\uffcb\115\uffcb\132\uffcb" +
    "\133\uffcb\146\uffcb\001\002\000\016\040\027\075\216\113" +
    "\024\114\016\115\022\146\017\001\002\000\016\040\027" +
    "\075\222\113\024\114\016\115\022\146\017\001\002\000" +
    "\032\007\043\010\042\011\041\012\037\013\036\014\035" +
    "\016\047\022\040\023\034\024\046\025\045\033\217\001" +
    "\002\000\006\010\220\025\101\001\002\000\004\077\221" +
    "\001\002\000\022\040\uffca\075\uffca\113\uffca\114\uffca\115" +
    "\uffca\132\uffca\133\uffca\146\uffca\001\002\000\032\007\043" +
    "\010\042\011\041\012\037\013\036\014\035\016\047\022" +
    "\040\023\034\024\046\025\045\033\223\001\002\000\006" +
    "\010\224\025\101\001\002\000\004\077\225\001\002\000" +
    "\022\040\uffcc\075\uffcc\113\uffcc\114\uffcc\115\uffcc\132\uffcc" +
    "\133\uffcc\146\uffcc\001\002\000\014\071\055\072\052\073" +
    "\057\074\051\077\241\001\002\000\016\040\027\075\231" +
    "\113\024\114\016\115\022\146\017\001\002\000\016\040" +
    "\027\075\235\113\024\114\016\115\022\146\017\001\002" +
    "\000\032\007\043\010\042\011\041\012\037\013\036\014" +
    "\035\016\047\022\040\023\034\024\046\025\045\033\232" +
    "\001\002\000\006\011\233\025\101\001\002\000\004\077" +
    "\234\001\002\000\022\040\uffc5\075\uffc5\113\uffc5\114\uffc5" +
    "\115\uffc5\132\uffc5\133\uffc5\146\uffc5\001\002\000\032\007" +
    "\043\010\042\011\041\012\037\013\036\014\035\016\047" +
    "\022\040\023\034\024\046\025\045\033\236\001\002\000" +
    "\006\011\237\025\101\001\002\000\004\077\240\001\002" +
    "\000\022\040\uffc7\075\uffc7\113\uffc7\114\uffc7\115\uffc7\132" +
    "\uffc7\133\uffc7\146\uffc7\001\002\000\016\040\027\075\243" +
    "\113\024\114\016\115\022\146\017\001\002\000\016\040" +
    "\027\075\247\113\024\114\016\115\022\146\017\001\002" +
    "\000\032\007\043\010\042\011\041\012\037\013\036\014" +
    "\035\016\047\022\040\023\034\024\046\025\045\033\244" +
    "\001\002\000\006\011\245\025\101\001\002\000\004\077" +
    "\246\001\002\000\022\040\uffc6\075\uffc6\113\uffc6\114\uffc6" +
    "\115\uffc6\132\uffc6\133\uffc6\146\uffc6\001\002\000\032\007" +
    "\043\010\042\011\041\012\037\013\036\014\035\016\047" +
    "\022\040\023\034\024\046\025\045\033\250\001\002\000" +
    "\006\011\251\025\101\001\002\000\004\077\252\001\002" +
    "\000\022\040\uffc8\075\uffc8\113\uffc8\114\uffc8\115\uffc8\132" +
    "\uffc8\133\uffc8\146\uffc8\001\002\000\014\071\055\072\052" +
    "\073\057\074\051\077\266\001\002\000\016\040\027\075" +
    "\256\113\024\114\016\115\022\146\017\001\002\000\016" +
    "\040\027\075\262\113\024\114\016\115\022\146\017\001" +
    "\002\000\032\007\043\010\042\011\041\012\037\013\036" +
    "\014\035\016\047\022\040\023\034\024\046\025\045\033" +
    "\257\001\002\000\006\022\260\025\101\001\002\000\004" +
    "\077\261\001\002\000\022\040\uffe6\075\uffe6\113\uffe6\114" +
    "\uffe6\115\uffe6\132\uffe6\133\uffe6\146\uffe6\001\002\000\032" +
    "\007\043\010\042\011\041\012\037\013\036\014\035\016" +
    "\047\022\040\023\034\024\046\025\045\033\263\001\002" +
    "\000\006\022\264\025\101\001\002\000\004\077\265\001" +
    "\002\000\022\040\uffe5\075\uffe5\113\uffe5\114\uffe5\115\uffe5" +
    "\132\uffe5\133\uffe5\146\uffe5\001\002\000\016\040\027\075" +
    "\270\113\024\114\016\115\022\146\017\001\002\000\016" +
    "\040\027\075\274\113\024\114\016\115\022\146\017\001" +
    "\002\000\032\007\043\010\042\011\041\012\037\013\036" +
    "\014\035\016\047\022\040\023\034\024\046\025\045\033" +
    "\271\001\002\000\006\022\272\025\101\001\002\000\004" +
    "\077\273\001\002\000\022\040\uffe8\075\uffe8\113\uffe8\114" +
    "\uffe8\115\uffe8\132\uffe8\133\uffe8\146\uffe8\001\002\000\032" +
    "\007\043\010\042\011\041\012\037\013\036\014\035\016" +
    "\047\022\040\023\034\024\046\025\045\033\275\001\002" +
    "\000\006\022\276\025\101\001\002\000\004\077\277\001" +
    "\002\000\022\040\uffe7\075\uffe7\113\uffe7\114\uffe7\115\uffe7" +
    "\132\uffe7\133\uffe7\146\uffe7\001\002\000\014\071\055\072" +
    "\052\073\057\074\051\077\313\001\002\000\016\040\027" +
    "\075\303\113\024\114\016\115\022\146\017\001\002\000" +
    "\016\040\027\075\307\113\024\114\016\115\022\146\017" +
    "\001\002\000\032\007\043\010\042\011\041\012\037\013" +
    "\036\014\035\016\047\022\040\023\034\024\046\025\045" +
    "\033\304\001\002\000\006\012\305\025\101\001\002\000" +
    "\004\077\306\001\002\000\022\040\uffc1\075\uffc1\113\uffc1" +
    "\114\uffc1\115\uffc1\132\uffc1\133\uffc1\146\uffc1\001\002\000" +
    "\032\007\043\010\042\011\041\012\037\013\036\014\035" +
    "\016\047\022\040\023\034\024\046\025\045\033\310\001" +
    "\002\000\006\012\311\025\101\001\002\000\004\077\312" +
    "\001\002\000\022\040\uffc3\075\uffc3\113\uffc3\114\uffc3\115" +
    "\uffc3\132\uffc3\133\uffc3\146\uffc3\001\002\000\016\040\027" +
    "\075\315\113\024\114\016\115\022\146\017\001\002\000" +
    "\016\040\027\075\321\113\024\114\016\115\022\146\017" +
    "\001\002\000\032\007\043\010\042\011\041\012\037\013" +
    "\036\014\035\016\047\022\040\023\034\024\046\025\045" +
    "\033\316\001\002\000\006\012\317\025\101\001\002\000" +
    "\004\077\320\001\002\000\022\040\uffc2\075\uffc2\113\uffc2" +
    "\114\uffc2\115\uffc2\132\uffc2\133\uffc2\146\uffc2\001\002\000" +
    "\032\007\043\010\042\011\041\012\037\013\036\014\035" +
    "\016\047\022\040\023\034\024\046\025\045\033\322\001" +
    "\002\000\006\012\323\025\101\001\002\000\004\077\324" +
    "\001\002\000\022\040\uffc4\075\uffc4\113\uffc4\114\uffc4\115" +
    "\uffc4\132\uffc4\133\uffc4\146\uffc4\001\002\000\014\071\055" +
    "\072\052\073\057\074\051\077\340\001\002\000\016\040" +
    "\027\075\330\113\024\114\016\115\022\146\017\001\002" +
    "\000\016\040\027\075\334\113\024\114\016\115\022\146" +
    "\017\001\002\000\032\007\043\010\042\011\041\012\037" +
    "\013\036\014\035\016\047\022\040\023\034\024\046\025" +
    "\045\033\331\001\002\000\006\013\332\025\101\001\002" +
    "\000\004\077\333\001\002\000\022\040\uffbd\075\uffbd\113" +
    "\uffbd\114\uffbd\115\uffbd\132\uffbd\133\uffbd\146\uffbd\001\002" +
    "\000\032\007\043\010\042\011\041\012\037\013\036\014" +
    "\035\016\047\022\040\023\034\024\046\025\045\033\335" +
    "\001\002\000\006\013\336\025\101\001\002\000\004\077" +
    "\337\001\002\000\022\040\uffbf\075\uffbf\113\uffbf\114\uffbf" +
    "\115\uffbf\132\uffbf\133\uffbf\146\uffbf\001\002\000\016\040" +
    "\027\075\342\113\024\114\016\115\022\146\017\001\002" +
    "\000\016\040\027\075\346\113\024\114\016\115\022\146" +
    "\017\001\002\000\032\007\043\010\042\011\041\012\037" +
    "\013\036\014\035\016\047\022\040\023\034\024\046\025" +
    "\045\033\343\001\002\000\006\013\344\025\101\001\002" +
    "\000\004\077\345\001\002\000\022\040\uffbe\075\uffbe\113" +
    "\uffbe\114\uffbe\115\uffbe\132\uffbe\133\uffbe\146\uffbe\001\002" +
    "\000\032\007\043\010\042\011\041\012\037\013\036\014" +
    "\035\016\047\022\040\023\034\024\046\025\045\033\347" +
    "\001\002\000\006\013\350\025\101\001\002\000\004\077" +
    "\351\001\002\000\022\040\uffc0\075\uffc0\113\uffc0\114\uffc0" +
    "\115\uffc0\132\uffc0\133\uffc0\146\uffc0\001\002\000\014\071" +
    "\055\072\052\073\057\074\051\077\365\001\002\000\016" +
    "\040\027\075\355\113\024\114\016\115\022\146\017\001" +
    "\002\000\016\040\027\075\361\113\024\114\016\115\022" +
    "\146\017\001\002\000\032\007\043\010\042\011\041\012" +
    "\037\013\036\014\035\016\047\022\040\023\034\024\046" +
    "\025\045\033\356\001\002\000\006\014\357\025\101\001" +
    "\002\000\004\077\360\001\002\000\022\040\uffb9\075\uffb9" +
    "\113\uffb9\114\uffb9\115\uffb9\132\uffb9\133\uffb9\146\uffb9\001" +
    "\002\000\032\007\043\010\042\011\041\012\037\013\036" +
    "\014\035\016\047\022\040\023\034\024\046\025\045\033" +
    "\362\001\002\000\006\014\363\025\101\001\002\000\004" +
    "\077\364\001\002\000\022\040\uffbb\075\uffbb\113\uffbb\114" +
    "\uffbb\115\uffbb\132\uffbb\133\uffbb\146\uffbb\001\002\000\016" +
    "\040\027\075\367\113\024\114\016\115\022\146\017\001" +
    "\002\000\016\040\027\075\373\113\024\114\016\115\022" +
    "\146\017\001\002\000\032\007\043\010\042\011\041\012" +
    "\037\013\036\014\035\016\047\022\040\023\034\024\046" +
    "\025\045\033\370\001\002\000\006\014\371\025\101\001" +
    "\002\000\004\077\372\001\002\000\022\040\uffba\075\uffba" +
    "\113\uffba\114\uffba\115\uffba\132\uffba\133\uffba\146\uffba\001" +
    "\002\000\032\007\043\010\042\011\041\012\037\013\036" +
    "\014\035\016\047\022\040\023\034\024\046\025\045\033" +
    "\374\001\002\000\006\014\375\025\101\001\002\000\004" +
    "\077\376\001\002\000\022\040\uffbc\075\uffbc\113\uffbc\114" +
    "\uffbc\115\uffbc\132\uffbc\133\uffbc\146\uffbc\001\002\000\014" +
    "\071\055\072\052\073\057\074\051\077\u010a\001\002\000" +
    "\016\040\027\075\u0102\113\024\114\016\115\022\146\017" +
    "\001\002\000\016\040\027\075\u0106\113\024\114\016\115" +
    "\022\146\017\001\002\000\032\007\043\010\042\011\041" +
    "\012\037\013\036\014\035\016\047\022\040\023\034\024" +
    "\046\025\045\033\u0103\001\002\000\006\023\u0104\025\101" +
    "\001\002\000\004\077\u0105\001\002\000\022\040\uffd1\075" +
    "\uffd1\113\uffd1\114\uffd1\115\uffd1\132\uffd1\133\uffd1\146\uffd1" +
    "\001\002\000\032\007\043\010\042\011\041\012\037\013" +
    "\036\014\035\016\047\022\040\023\034\024\046\025\045" +
    "\033\u0107\001\002\000\006\023\u0108\025\101\001\002\000" +
    "\004\077\u0109\001\002\000\022\040\uffd3\075\uffd3\113\uffd3" +
    "\114\uffd3\115\uffd3\132\uffd3\133\uffd3\146\uffd3\001\002\000" +
    "\016\040\027\075\u010c\113\024\114\016\115\022\146\017" +
    "\001\002\000\016\040\027\075\u0110\113\024\114\016\115" +
    "\022\146\017\001\002\000\032\007\043\010\042\011\041" +
    "\012\037\013\036\014\035\016\047\022\040\023\034\024" +
    "\046\025\045\033\u010d\001\002\000\006\023\u010e\025\101" +
    "\001\002\000\004\077\u010f\001\002\000\022\040\uffd2\075" +
    "\uffd2\113\uffd2\114\uffd2\115\uffd2\132\uffd2\133\uffd2\146\uffd2" +
    "\001\002\000\032\007\043\010\042\011\041\012\037\013" +
    "\036\014\035\016\047\022\040\023\034\024\046\025\045" +
    "\033\u0111\001\002\000\006\023\u0112\025\101\001\002\000" +
    "\004\077\u0113\001\002\000\022\040\uffd4\075\uffd4\113\uffd4" +
    "\114\uffd4\115\uffd4\132\uffd4\133\uffd4\146\uffd4\001\002\000" +
    "\004\077\u0115\001\002\000\004\075\u0117\001\002\000\004" +
    "\002\ufffc\001\002\000\004\006\u0118\001\002\000\014\071" +
    "\055\072\052\073\057\074\051\077\u011a\001\002\000\014" +
    "\071\055\072\052\073\057\074\051\077\u012c\001\002\000" +
    "\016\040\027\075\u011c\113\024\114\016\115\022\146\017" +
    "\001\002\000\016\040\027\075\u0124\113\024\114\016\115" +
    "\022\146\017\001\002\000\032\007\043\010\042\011\041" +
    "\012\037\013\036\014\035\016\047\022\040\023\034\024" +
    "\046\025\045\033\u011d\001\002\000\006\006\u011e\025\101" +
    "\001\002\000\004\077\u011f\001\002\000\004\075\u0120\001" +
    "\002\000\004\033\u0121\001\002\000\004\004\u0122\001\002" +
    "\000\004\077\u0123\001\002\000\004\002\ufff9\001\002\000" +
    "\032\007\043\010\042\011\041\012\037\013\036\014\035" +
    "\016\047\022\040\023\034\024\046\025\045\033\u0125\001" +
    "\002\000\006\006\u0126\025\101\001\002\000\004\077\u0127" +
    "\001\002\000\004\075\u0128\001\002\000\004\033\u0129\001" +
    "\002\000\004\004\u012a\001\002\000\004\077\u012b\001\002" +
    "\000\004\002\ufffa\001\002\000\016\040\027\075\u012e\113" +
    "\024\114\016\115\022\146\017\001\002\000\016\040\027" +
    "\075\u0136\113\024\114\016\115\022\146\017\001\002\000" +
    "\032\007\043\010\042\011\041\012\037\013\036\014\035" +
    "\016\047\022\040\023\034\024\046\025\045\033\u012f\001" +
    "\002\000\006\006\u0130\025\101\001\002\000\004\077\u0131" +
    "\001\002\000\004\075\u0132\001\002\000\004\033\u0133\001" +
    "\002\000\004\004\u0134\001\002\000\004\077\u0135\001\002" +
    "\000\004\002\ufff7\001\002\000\032\007\043\010\042\011" +
    "\041\012\037\013\036\014\035\016\047\022\040\023\034" +
    "\024\046\025\045\033\u0137\001\002\000\006\006\u0138\025" +
    "\101\001\002\000\004\077\u0139\001\002\000\004\075\u013a" +
    "\001\002\000\004\033\u013b\001\002\000\004\004\u013c\001" +
    "\002\000\004\077\u013d\001\002\000\004\002\ufff8\001\002" +
    "\000\004\033\u013f\001\002\000\004\005\u0140\001\002\000" +
    "\004\077\u0141\001\002\000\004\075\u0117\001\002\000\004" +
    "\002\ufffe\001\002\000\032\007\043\010\042\011\041\012" +
    "\037\013\036\014\035\016\047\022\040\023\034\024\046" +
    "\025\045\033\u0144\001\002\000\006\005\u0145\025\101\001" +
    "\002\000\004\077\u0146\001\002\000\004\075\u0117\001\002" +
    "\000\004\002\ufffd\001\002\000\024\045\u0157\104\u014d\105" +
    "\u0153\106\u014f\107\u0152\110\u0150\114\u014c\116\u0149\120\u014e" +
    "\001\002\000\004\035\u01b5\001\002\000\026\045\u0157\104" +
    "\u014d\105\u0153\106\u014f\107\u0152\110\u0150\114\u014c\116\u0149" +
    "\120\u014e\146\u01b2\001\002\000\004\114\u01b0\001\002\000" +
    "\044\031\u016b\035\u016f\037\uff9b\040\u016d\041\uff9b\055\u019d" +
    "\056\u019a\057\u0198\060\u019c\061\u0197\103\u0199\111\u0165\112" +
    "\u0167\113\u016a\114\u0166\115\u0168\117\u0169\001\002\000\004" +
    "\114\uff74\001\002\000\004\114\uff6f\001\002\000\004\114" +
    "\uff72\001\002\000\004\114\uff70\001\002\000\006\037\u0162" +
    "\041\u0163\001\002\000\004\114\uff71\001\002\000\004\114" +
    "\uff73\001\002\000\026\045\uffb3\104\uffb3\105\uffb3\106\uffb3" +
    "\107\uffb3\110\uffb3\114\uffb3\116\uffb3\120\uffb3\146\uffb3\001" +
    "\002\000\004\037\u0161\001\002\000\026\045\uffa4\104\uffa4" +
    "\105\uffa4\106\uffa4\107\uffa4\110\uffa4\114\uffa4\116\uffa4\120" +
    "\uffa4\146\uffa4\001\002\000\004\124\u0158\001\002\000\004" +
    "\114\u0159\001\002\000\014\036\uffa3\037\uffa3\041\uffa3\124" +
    "\u015a\125\u015b\001\002\000\004\114\u0160\001\002\000\004" +
    "\113\u015c\001\002\000\004\126\u015d\001\002\000\004\124" +
    "\u015e\001\002\000\004\114\u015f\001\002\000\010\036\uffa2" +
    "\037\uffa2\041\uffa2\001\002\000\010\036\uffa1\037\uffa1\041" +
    "\uffa1\001\002\000\026\045\uffa5\104\uffa5\105\uffa5\106\uffa5" +
    "\107\uffa5\110\uffa5\114\uffa5\116\uffa5\120\uffa5\146\uffa5\001" +
    "\002\000\026\045\uffae\104\uffae\105\uffae\106\uffae\107\uffae" +
    "\110\uffae\114\uffae\116\uffae\120\uffae\146\uffae\001\002\000" +
    "\004\114\u0164\001\002\000\032\031\u016b\035\u016f\037\uffa0" +
    "\040\u016d\041\uffa0\103\u016c\111\u0165\112\u0167\113\u016a\114" +
    "\u0166\115\u0168\117\u0169\001\002\000\042\030\uff77\031\uff77" +
    "\032\uff77\033\uff77\034\uff77\036\uff77\037\uff77\041\uff77\042" +
    "\uff77\043\uff77\075\uff77\076\uff77\077\uff77\100\uff77\101\uff77" +
    "\102\uff77\001\002\000\042\030\uff7b\031\uff7b\032\uff7b\033" +
    "\uff7b\034\uff7b\036\uff7b\037\uff7b\041\uff7b\042\uff7b\043\uff7b" +
    "\075\uff7b\076\uff7b\077\uff7b\100\uff7b\101\uff7b\102\uff7b\001" +
    "\002\000\042\030\uff76\031\uff76\032\uff76\033\uff76\034\uff76" +
    "\036\uff76\037\uff76\041\uff76\042\uff76\043\uff76\075\uff76\076" +
    "\uff76\077\uff76\100\uff76\101\uff76\102\uff76\001\002\000\042" +
    "\030\uff7a\031\uff7a\032\uff7a\033\uff7a\034\uff7a\036\uff7a\037" +
    "\uff7a\041\uff7a\042\uff7a\043\uff7a\075\uff7a\076\uff7a\077\uff7a" +
    "\100\uff7a\101\uff7a\102\uff7a\001\002\000\042\030\uff79\031" +
    "\uff79\032\uff79\033\uff79\034\uff79\036\uff79\037\uff79\041\uff79" +
    "\042\uff79\043\uff79\075\uff79\076\uff79\077\uff79\100\uff79\101" +
    "\uff79\102\uff79\001\002\000\042\030\uff7c\031\uff7c\032\uff7c" +
    "\033\uff7c\034\uff7c\036\uff7c\037\uff7c\041\uff7c\042\uff7c\043" +
    "\uff7c\075\uff7c\076\uff7c\077\uff7c\100\uff7c\101\uff7c\102\uff7c" +
    "\001\002\000\024\031\u016b\035\u016f\040\u016d\111\u0165\112" +
    "\u0167\113\u016a\114\u0166\115\u0168\117\u0169\001\002\000\030" +
    "\031\u016b\035\u017e\040\u016d\044\u017a\045\u0157\111\u0165\112" +
    "\u0167\113\u016a\114\u0166\115\u0168\117\u0169\001\002\000\042" +
    "\030\uff78\031\uff78\032\uff78\033\uff78\034\uff78\036\uff78\037" +
    "\uff78\041\uff78\042\uff78\043\uff78\075\uff78\076\uff78\077\uff78" +
    "\100\uff78\101\uff78\102\uff78\001\002\000\016\030\u0172\031" +
    "\u0173\032\u0171\033\u0175\037\uff9f\041\uff9f\001\002\000\024" +
    "\031\u016b\035\u016f\040\u016d\111\u0165\112\u0167\113\u016a\114" +
    "\u0166\115\u0168\117\u0169\001\002\000\014\030\u0172\031\u0173" +
    "\032\u0171\033\u0175\036\u0174\001\002\000\024\031\u016b\035" +
    "\u016f\040\u016d\111\u0165\112\u0167\113\u016a\114\u0166\115\u0168" +
    "\117\u0169\001\002\000\024\031\u016b\035\u016f\040\u016d\111" +
    "\u0165\112\u0167\113\u016a\114\u0166\115\u0168\117\u0169\001\002" +
    "\000\024\031\u016b\035\u016f\040\u016d\111\u0165\112\u0167\113" +
    "\u016a\114\u0166\115\u0168\117\u0169\001\002\000\042\030\uff75" +
    "\031\uff75\032\uff75\033\uff75\034\uff75\036\uff75\037\uff75\041" +
    "\uff75\042\uff75\043\uff75\075\uff75\076\uff75\077\uff75\100\uff75" +
    "\101\uff75\102\uff75\001\002\000\024\031\u016b\035\u016f\040" +
    "\u016d\111\u0165\112\u0167\113\u016a\114\u0166\115\u0168\117\u0169" +
    "\001\002\000\042\030\uff7e\031\uff7e\032\uff7e\033\uff7e\034" +
    "\uff7e\036\uff7e\037\uff7e\041\uff7e\042\uff7e\043\uff7e\075\uff7e" +
    "\076\uff7e\077\uff7e\100\uff7e\101\uff7e\102\uff7e\001\002\000" +
    "\042\030\uff80\031\uff80\032\u0171\033\u0175\034\uff80\036\uff80" +
    "\037\uff80\041\uff80\042\uff80\043\uff80\075\uff80\076\uff80\077" +
    "\uff80\100\uff80\101\uff80\102\uff80\001\002\000\042\030\uff81" +
    "\031\uff81\032\u0171\033\u0175\034\uff81\036\uff81\037\uff81\041" +
    "\uff81\042\uff81\043\uff81\075\uff81\076\uff81\077\uff81\100\uff81" +
    "\101\uff81\102\uff81\001\002\000\042\030\uff7f\031\uff7f\032" +
    "\uff7f\033\uff7f\034\uff7f\036\uff7f\037\uff7f\041\uff7f\042\uff7f" +
    "\043\uff7f\075\uff7f\076\uff7f\077\uff7f\100\uff7f\101\uff7f\102" +
    "\uff7f\001\002\000\026\031\u016b\035\u017e\040\u016d\044\u017a" +
    "\111\u0165\112\u0167\113\u016a\114\u0166\115\u0168\117\u0169\001" +
    "\002\000\034\030\u0172\031\u0173\032\u0171\033\u0175\034\u0189" +
    "\037\uff9e\041\uff9e\075\u0187\076\u018a\077\u018b\100\u0186\101" +
    "\u018c\102\u0188\001\002\000\006\037\uff9d\041\uff9d\001\002" +
    "\000\012\037\uff9c\041\uff9c\042\u0181\043\u0182\001\002\000" +
    "\026\031\u016b\035\u017e\040\u016d\044\u017a\111\u0165\112\u0167" +
    "\113\u016a\114\u0166\115\u0168\117\u0169\001\002\000\032\030" +
    "\u0172\031\u0173\032\u0171\033\u0175\034\u0189\036\u0174\075\u0187" +
    "\076\u018a\077\u018b\100\u0186\101\u018c\102\u0188\001\002\000" +
    "\010\036\u0183\042\u0181\043\u0182\001\002\000\026\031\u016b" +
    "\035\u017e\040\u016d\044\u017a\111\u0165\112\u0167\113\u016a\114" +
    "\u0166\115\u0168\117\u0169\001\002\000\026\031\u016b\035\u017e" +
    "\040\u016d\044\u017a\111\u0165\112\u0167\113\u016a\114\u0166\115" +
    "\u0168\117\u0169\001\002\000\014\036\uff8c\037\uff8c\041\uff8c" +
    "\042\uff8c\043\uff8c\001\002\000\030\030\u0172\031\u0173\032" +
    "\u0171\033\u0175\034\u0189\075\u0187\076\u018a\077\u018b\100\u0186" +
    "\101\u018c\102\u0188\001\002\000\014\036\uff8d\037\uff8d\041" +
    "\uff8d\042\uff8d\043\uff8d\001\002\000\024\031\u016b\035\u016f" +
    "\040\u016d\111\u0165\112\u0167\113\u016a\114\u0166\115\u0168\117" +
    "\u0169\001\002\000\024\031\u016b\035\u016f\040\u016d\111\u0165" +
    "\112\u0167\113\u016a\114\u0166\115\u0168\117\u0169\001\002\000" +
    "\024\031\u016b\035\u016f\040\u016d\111\u0165\112\u0167\113\u016a" +
    "\114\u0166\115\u0168\117\u0169\001\002\000\024\031\u016b\035" +
    "\u016f\040\u016d\111\u0165\112\u0167\113\u016a\114\u0166\115\u0168" +
    "\117\u0169\001\002\000\024\031\u016b\035\u016f\040\u016d\111" +
    "\u0165\112\u0167\113\u016a\114\u0166\115\u0168\117\u0169\001\002" +
    "\000\024\031\u016b\035\u016f\040\u016d\111\u0165\112\u0167\113" +
    "\u016a\114\u0166\115\u0168\117\u0169\001\002\000\024\031\u016b" +
    "\035\u016f\040\u016d\111\u0165\112\u0167\113\u016a\114\u0166\115" +
    "\u0168\117\u0169\001\002\000\024\030\u0172\031\u0173\032\u0171" +
    "\033\u0175\036\uff92\037\uff92\041\uff92\042\uff92\043\uff92\001" +
    "\002\000\024\030\u0172\031\u0173\032\u0171\033\u0175\036\uff96" +
    "\037\uff96\041\uff96\042\uff96\043\uff96\001\002\000\024\030" +
    "\u0172\031\u0173\032\u0171\033\u0175\036\uff93\037\uff93\041\uff93" +
    "\042\uff93\043\uff93\001\002\000\024\030\u0172\031\u0173\032" +
    "\u0171\033\u0175\036\uff90\037\uff90\041\uff90\042\uff90\043\uff90" +
    "\001\002\000\024\030\u0172\031\u0173\032\u0171\033\u0175\036" +
    "\uff91\037\uff91\041\uff91\042\uff91\043\uff91\001\002\000\024" +
    "\030\u0172\031\u0173\032\u0171\033\u0175\036\uff95\037\uff95\041" +
    "\uff95\042\uff95\043\uff95\001\002\000\024\030\u0172\031\u0173" +
    "\032\u0171\033\u0175\036\uff94\037\uff94\041\uff94\042\uff94\043" +
    "\uff94\001\002\000\014\036\uff8e\037\uff8e\041\uff8e\042\uff8e" +
    "\043\uff8e\001\002\000\014\036\uff8f\037\uff8f\041\uff8f\042" +
    "\uff8f\043\uff8f\001\002\000\042\030\uff7d\031\uff7d\032\u0171" +
    "\033\u0175\034\uff7d\036\uff7d\037\uff7d\041\uff7d\042\uff7d\043" +
    "\uff7d\075\uff7d\076\uff7d\077\uff7d\100\uff7d\101\uff7d\102\uff7d" +
    "\001\002\000\026\031\u016b\035\u016f\040\u016d\045\u0157\111" +
    "\u0165\112\u0167\113\u016a\114\u0166\115\u0168\117\u0169\001\002" +
    "\000\026\031\u016b\035\u016f\040\u016d\045\u0157\111\u0165\112" +
    "\u0167\113\u016a\114\u0166\115\u0168\117\u0169\001\002\000\030" +
    "\031\u016b\035\u017e\040\u016d\044\u017a\045\u0157\111\u0165\112" +
    "\u0167\113\u016a\114\u0166\115\u0168\117\u0169\001\002\000\004" +
    "\037\u01a3\001\002\000\016\030\u0172\031\u0173\032\u0171\033" +
    "\u0175\037\uff9a\041\uff9a\001\002\000\026\031\u016b\035\u016f" +
    "\040\u016d\045\u0157\111\u0165\112\u0167\113\u016a\114\u0166\115" +
    "\u0168\117\u0169\001\002\000\004\037\u019e\001\002\000\026" +
    "\045\uffad\104\uffad\105\uffad\106\uffad\107\uffad\110\uffad\114" +
    "\uffad\116\uffad\120\uffad\146\uffad\001\002\000\014\030\u0172" +
    "\031\u0173\032\u0171\033\u0175\037\u01a2\001\002\000\004\037" +
    "\u01a1\001\002\000\026\045\uffa8\104\uffa8\105\uffa8\106\uffa8" +
    "\107\uffa8\110\uffa8\114\uffa8\116\uffa8\120\uffa8\146\uffa8\001" +
    "\002\000\026\045\uffa9\104\uffa9\105\uffa9\106\uffa9\107\uffa9" +
    "\110\uffa9\114\uffa9\116\uffa9\120\uffa9\146\uffa9\001\002\000" +
    "\026\045\uffac\104\uffac\105\uffac\106\uffac\107\uffac\110\uffac" +
    "\114\uffac\116\uffac\120\uffac\146\uffac\001\002\000\034\030" +
    "\u0172\031\u0173\032\u0171\033\u0175\034\u0189\037\uff99\041\uff99" +
    "\075\u0187\076\u018a\077\u018b\100\u0186\101\u018c\102\u0188\001" +
    "\002\000\006\037\uff97\041\uff97\001\002\000\012\037\uff98" +
    "\041\uff98\042\u0181\043\u0182\001\002\000\014\030\u0172\031" +
    "\u0173\032\u0171\033\u0175\037\u01aa\001\002\000\004\037\u01a9" +
    "\001\002\000\026\045\uffaa\104\uffaa\105\uffaa\106\uffaa\107" +
    "\uffaa\110\uffaa\114\uffaa\116\uffaa\120\uffaa\146\uffaa\001\002" +
    "\000\026\045\uffab\104\uffab\105\uffab\106\uffab\107\uffab\110" +
    "\uffab\114\uffab\116\uffab\120\uffab\146\uffab\001\002\000\014" +
    "\030\u0172\031\u0173\032\u0171\033\u0175\037\u01ae\001\002\000" +
    "\004\037\u01ad\001\002\000\026\045\uffa6\104\uffa6\105\uffa6" +
    "\106\uffa6\107\uffa6\110\uffa6\114\uffa6\116\uffa6\120\uffa6\146" +
    "\uffa6\001\002\000\026\045\uffa7\104\uffa7\105\uffa7\106\uffa7" +
    "\107\uffa7\110\uffa7\114\uffa7\116\uffa7\120\uffa7\146\uffa7\001" +
    "\002\000\006\037\u01b1\041\u0163\001\002\000\032\031\u016b" +
    "\035\u016f\037\uff9b\040\u016d\041\uff9b\103\u0199\111\u0165\112" +
    "\u0167\113\u016a\114\u0166\115\u0168\117\u0169\001\002\000\026" +
    "\045\uffaf\104\uffaf\105\uffaf\106\uffaf\107\uffaf\110\uffaf\114" +
    "\uffaf\116\uffaf\120\uffaf\146\uffaf\001\002\000\004\146\u01b4" +
    "\001\002\000\026\045\uffb4\104\uffb4\105\uffb4\106\uffb4\107" +
    "\uffb4\110\uffb4\114\uffb4\116\uffb4\120\uffb4\146\uffb4\001\002" +
    "\000\022\040\uffea\075\uffea\113\uffea\114\uffea\115\uffea\132" +
    "\uffea\133\uffea\146\uffea\001\002\000\030\031\u016b\035\u017e" +
    "\040\u016d\044\u017a\045\u0157\111\u0165\112\u0167\113\u016a\114" +
    "\u0166\115\u0168\117\u0169\001\002\000\032\030\u0172\031\u0173" +
    "\032\u0171\033\u0175\034\u0189\036\u01bd\075\u0187\076\u018a\077" +
    "\u018b\100\u0186\101\u018c\102\u0188\001\002\000\004\036\u01bb" +
    "\001\002\000\010\036\u01b9\042\u0181\043\u0182\001\002\000" +
    "\004\037\u01ba\001\002\000\026\045\uffb1\104\uffb1\105\uffb1" +
    "\106\uffb1\107\uffb1\110\uffb1\114\uffb1\116\uffb1\120\uffb1\146" +
    "\uffb1\001\002\000\004\037\u01bc\001\002\000\026\045\uffb0" +
    "\104\uffb0\105\uffb0\106\uffb0\107\uffb0\110\uffb0\114\uffb0\116" +
    "\uffb0\120\uffb0\146\uffb0\001\002\000\004\037\u01be\001\002" +
    "\000\026\045\uffb2\104\uffb2\105\uffb2\106\uffb2\107\uffb2\110" +
    "\uffb2\114\uffb2\116\uffb2\120\uffb2\146\uffb2\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u01bc\000\006\002\005\004\003\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\005\011\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\006\022" +
    "\007\017\010\031\012\030\013\020\031\024\042\027\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\010\103" +
    "\012\030\013\020\031\024\042\027\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\017\047\020\052\023\055\024\376\025" +
    "\053\026\057\001\001\000\016\017\047\020\052\023\055" +
    "\024\351\025\053\026\057\001\001\000\016\017\047\020" +
    "\052\023\055\024\324\025\053\026\057\001\001\000\016" +
    "\017\047\020\052\023\055\024\277\025\053\026\057\001" +
    "\001\000\016\017\047\020\052\023\055\024\252\025\053" +
    "\026\057\001\001\000\016\017\047\020\052\023\055\024" +
    "\225\025\053\026\057\001\001\000\016\017\047\020\052" +
    "\023\055\024\200\025\053\026\057\001\001\000\016\017" +
    "\047\020\052\023\055\024\153\025\053\026\057\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\016\017\047\020\052\023\055\024\060\025\053\026\057" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\017\047\020\052\023\055\025\053\026\130\001\001" +
    "\000\006\043\063\045\062\001\001\000\002\001\001\000" +
    "\004\045\126\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\047\071\001\001\000\016\007" +
    "\124\010\031\012\030\013\020\031\024\042\027\001\001" +
    "\000\002\001\001\000\002\001\001\000\016\007\074\010" +
    "\031\012\030\013\020\031\024\042\027\001\001\000\014" +
    "\010\103\012\030\013\020\031\024\042\027\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\016\007\121\010\031\012\030\013\020\031\024\042" +
    "\027\001\001\000\002\001\001\000\016\007\112\010\031" +
    "\012\030\013\020\031\024\042\027\001\001\000\014\010" +
    "\103\012\030\013\020\031\024\042\027\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\010\103" +
    "\012\030\013\020\031\024\042\027\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\010\103\012\030\013\020" +
    "\031\024\042\027\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\043\132" +
    "\045\062\001\001\000\004\045\126\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\016" +
    "\007\146\010\031\012\030\013\020\031\024\042\027\001" +
    "\001\000\014\010\103\012\030\013\020\031\024\042\027" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\017\047\020\052\023\055" +
    "\025\053\026\130\001\001\000\016\007\155\010\031\012" +
    "\030\013\020\031\024\042\027\001\001\000\014\010\103" +
    "\012\030\013\020\031\024\042\027\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\007\167\010\031\012\030\013\020" +
    "\031\024\042\027\001\001\000\014\010\103\012\030\013" +
    "\020\031\024\042\027\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\017\047\020\052\023\055\025\053\026\130\001" +
    "\001\000\016\007\202\010\031\012\030\013\020\031\024" +
    "\042\027\001\001\000\014\010\103\012\030\013\020\031" +
    "\024\042\027\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\016" +
    "\007\214\010\031\012\030\013\020\031\024\042\027\001" +
    "\001\000\014\010\103\012\030\013\020\031\024\042\027" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\017\047\020" +
    "\052\023\055\025\053\026\130\001\001\000\016\007\227" +
    "\010\031\012\030\013\020\031\024\042\027\001\001\000" +
    "\014\010\103\012\030\013\020\031\024\042\027\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\016\007\241\010\031\012" +
    "\030\013\020\031\024\042\027\001\001\000\014\010\103" +
    "\012\030\013\020\031\024\042\027\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\017\047\020\052\023\055\025\053" +
    "\026\130\001\001\000\016\007\254\010\031\012\030\013" +
    "\020\031\024\042\027\001\001\000\014\010\103\012\030" +
    "\013\020\031\024\042\027\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\016\007\266\010\031\012\030\013\020\031\024" +
    "\042\027\001\001\000\014\010\103\012\030\013\020\031" +
    "\024\042\027\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\017\047\020\052\023\055\025\053\026\130\001\001\000" +
    "\016\007\301\010\031\012\030\013\020\031\024\042\027" +
    "\001\001\000\014\010\103\012\030\013\020\031\024\042" +
    "\027\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\016\007\313" +
    "\010\031\012\030\013\020\031\024\042\027\001\001\000" +
    "\014\010\103\012\030\013\020\031\024\042\027\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\017\047\020\052\023" +
    "\055\025\053\026\130\001\001\000\016\007\326\010\031" +
    "\012\030\013\020\031\024\042\027\001\001\000\014\010" +
    "\103\012\030\013\020\031\024\042\027\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\016\007\340\010\031\012\030\013" +
    "\020\031\024\042\027\001\001\000\014\010\103\012\030" +
    "\013\020\031\024\042\027\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\017\047\020\052\023\055\025\053\026\130" +
    "\001\001\000\016\007\353\010\031\012\030\013\020\031" +
    "\024\042\027\001\001\000\014\010\103\012\030\013\020" +
    "\031\024\042\027\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\016\007\365\010\031\012\030\013\020\031\024\042\027" +
    "\001\001\000\014\010\103\012\030\013\020\031\024\042" +
    "\027\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\017\047" +
    "\020\052\023\055\025\053\026\130\001\001\000\016\007" +
    "\u0100\010\031\012\030\013\020\031\024\042\027\001\001" +
    "\000\014\010\103\012\030\013\020\031\024\042\027\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\016\007\u010a\010\031" +
    "\012\030\013\020\031\024\042\027\001\001\000\014\010" +
    "\103\012\030\013\020\031\024\042\027\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\015\u0115\001" +
    "\001\000\002\001\001\000\002\001\001\000\016\017\047" +
    "\020\052\023\055\024\u0118\025\053\026\057\001\001\000" +
    "\014\017\047\020\052\023\055\025\053\026\130\001\001" +
    "\000\016\007\u011a\010\031\012\030\013\020\031\024\042" +
    "\027\001\001\000\014\010\103\012\030\013\020\031\024" +
    "\042\027\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\007\u012c\010\031\012\030\013\020" +
    "\031\024\042\027\001\001\000\014\010\103\012\030\013" +
    "\020\031\024\042\027\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\015\u0141\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\015\u0146\001\001\000\002\001\001\000\016" +
    "\003\u0155\034\u0149\035\u0153\036\u014a\037\u0150\052\u0154\001" +
    "\001\000\002\001\001\000\014\003\u0155\035\u01b2\036\u014a" +
    "\037\u0150\052\u0154\001\001\000\004\037\u01ae\001\001\000" +
    "\004\032\u019a\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\032\u016d\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\032" +
    "\u0195\001\001\000\010\032\u017a\041\u017c\052\u017b\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\032\u016f\001" +
    "\001\000\002\001\001\000\004\032\u0178\001\001\000\004" +
    "\032\u0177\001\001\000\004\032\u0176\001\001\000\002\001" +
    "\001\000\004\032\u0175\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\032" +
    "\u0183\041\u0194\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\032\u017e\041\u017f\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\032\u0183\041\u0193" +
    "\001\001\000\006\032\u0183\041\u0184\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\032\u0192" +
    "\001\001\000\004\032\u0191\001\001\000\004\032\u0190\001" +
    "\001\000\004\032\u018f\001\001\000\004\032\u018e\001\001" +
    "\000\004\032\u018d\001\001\000\004\032\u018c\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\032\u01aa\052\u01ab\001\001\000\006\032\u01a6\052" +
    "\u01a7\001\001\000\010\032\u01a3\041\u01a5\052\u01a4\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\032\u019e\052" +
    "\u019f\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\032\u019a\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\032" +
    "\u01b5\041\u01b7\052\u01b6\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintactico$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintactico$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintactico$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    public String resultado="";
    static String html="";

    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s)
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico Recuperado !!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);
    }
    
    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico, Panic Mode !!!!!!! ");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);
    }

 
}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintactico$actions {


        private String almacenarTexto="";


  private final Sintactico parser;

  /** Constructor */
  CUP$Sintactico$actions(Sintactico parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintactico$do_action(
    int                        CUP$Sintactico$act_num,
    java_cup.runtime.lr_parser CUP$Sintactico$parser,
    java.util.Stack            CUP$Sintactico$stack,
    int                        CUP$Sintactico$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintactico$result;

      /* select the action based on the action number */
      switch (CUP$Sintactico$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // NOMBRES_FUENTES ::= t10 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("NOMBRES_FUENTES",16, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // NOMBRES_FUENTES ::= t9 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("NOMBRES_FUENTES",16, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // NOMBRES_FUENTES ::= t8 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("NOMBRES_FUENTES",16, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // NOMBRES_FUENTES ::= t7 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("NOMBRES_FUENTES",16, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // NOMBRES_FUENTES ::= t6 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("NOMBRES_FUENTES",16, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // NOMBRES_FUENTES ::= t5 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("NOMBRES_FUENTES",16, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // NOMBRES_FUENTES ::= t4 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("NOMBRES_FUENTES",16, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // NOMBRES_FUENTES ::= t3 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("NOMBRES_FUENTES",16, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // NOMBRES_FUENTES ::= t2 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("NOMBRES_FUENTES",16, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // NOMBRES_FUENTES ::= t1 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("NOMBRES_FUENTES",16, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // TIPOS_ALIGN ::= centrado 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TIPOS_ALIGN",15, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // TIPOS_ALIGN ::= derecha 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TIPOS_ALIGN",15, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // TIPOS_ALIGN ::= izquierda 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TIPOS_ALIGN",15, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // COLORES ::= morado 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("COLORES",12, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // COLORES ::= anaranjado 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("COLORES",12, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // COLORES ::= gris 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("COLORES",12, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // COLORES ::= verde 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("COLORES",12, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // COLORES ::= azul 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("COLORES",12, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // COLORES ::= amarillo 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("COLORES",12, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // COLORES ::= rojo 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("COLORES",12, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // TIPODATOS ::= floaat 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		RESULT=t;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TIPODATOS",28, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // TIPODATOS ::= doublee 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		RESULT=t;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TIPODATOS",28, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // TIPODATOS ::= charr 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		RESULT=t;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TIPODATOS",28, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // TIPODATOS ::= stringg 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		RESULT=t;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TIPODATOS",28, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // TIPODATOS ::= booleann 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		RESULT=t;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TIPODATOS",28, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // TIPODATOS ::= intt 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int tright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		RESULT=t;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TIPODATOS",28, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // EXPR ::= para EXPR parc 
            {
              Object RESULT =null;
		int paleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int paright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object pa = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int pcleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int pcright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object pc = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
          RESULT =a.toString(); 
        
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("EXPR",24, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // EXPR ::= falsee 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
          RESULT = a.toString(); 
        
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("EXPR",24, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // EXPR ::= truee 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
          RESULT = a.toString(); 
        
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("EXPR",24, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // EXPR ::= caracter 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
          RESULT = a.toString(); 
        
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("EXPR",24, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // EXPR ::= decimal 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
          RESULT = a.toString(); 
        
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("EXPR",24, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // EXPR ::= cadena 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
          RESULT = a.toString(); 
        
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("EXPR",24, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // EXPR ::= id 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
          RESULT = a.toString(); 
        
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("EXPR",24, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // EXPR ::= num 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
          RESULT = a.toString(); 
        
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("EXPR",24, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // EXPR ::= menos EXPR 
            {
              Object RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
          RESULT = "-"+a.toString(); 
        
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("EXPR",24, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // EXPR ::= EXPR div EXPR 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
           String a1 = (String) a;
           char rs1 = a1.charAt(0);

           String a2 = (String) b;
           char rs2 = a2.charAt(0);

           if (Character.isDigit(rs1) && Character.isDigit(rs2)) {
                double valor1 = Double.parseDouble((String) a);
                double valor2 = Double.parseDouble((String) b);
                if (valor1 % 1 == 0 && valor2 % 1 == 0) {
                      int r = (int) (valor1 / valor2);
                      System.out.println("El resultado de " + a + m + b + "=" + r);
                      RESULT = String.valueOf(r);
                }else if((valor1 % 1 != 0 && valor2 % 1 == 0)|| (valor1 % 1 == 0 && valor2 % 1 != 0)||((valor1 % 1 != 0 && valor2 % 1 != 0))){
                      Double r = (valor1 / valor2);
                      System.out.println("El resultado de " + a + m + b + "=" + r);
                      RESULT = String.valueOf(r);
                }
           }else if ((!Character.isDigit(rs1) && Character.isDigit(rs2))|| Character.isDigit(rs1) && !Character.isDigit(rs2)){
                    String valor1=(String)a;
                    String valor2=(String)b;
                    String r= valor1+"/"+valor2;
                    System.out.println("No es posible restar con Strings " + a + m + b + "= " + r);
                    RESULT=String.valueOf(r);
           }else {
                  System.out.println("horror");
           }
        
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("EXPR",24, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // EXPR ::= EXPR por EXPR 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
           String a1 = (String) a;
           char rs1 = a1.charAt(0);

           String a2 = (String) b;
           char rs2 = a2.charAt(0);

           if (Character.isDigit(rs1) && Character.isDigit(rs2)) {
                double valor1 = Double.parseDouble((String) a);
                double valor2 = Double.parseDouble((String) b);
                if (valor1 % 1 == 0 && valor2 % 1 == 0) {
                      int r = (int) (valor1 * valor2);
                      System.out.println("El resultado de " + a + m + b + "=" + r);
                      RESULT = String.valueOf(r);
                }else if((valor1 % 1 != 0 && valor2 % 1 == 0)|| (valor1 % 1 == 0 && valor2 % 1 != 0)||((valor1 % 1 != 0 && valor2 % 1 != 0))){
                      Double r = (valor1 * valor2);
                      System.out.println("El resultado de " + a + m + b + "=" + r);
                      RESULT = String.valueOf(r);
                }
           }else if ((!Character.isDigit(rs1) && Character.isDigit(rs2))|| Character.isDigit(rs1) && !Character.isDigit(rs2)){
                    String valor1=(String)a;
                    String valor2=(String)b;
                    String r= valor1+"*"+valor2;
                    System.out.println("No es posible restar con Strings " + a + m + b + "= " + r);
                    RESULT=String.valueOf(r);
           }else {
                  System.out.println("horror");
           }
        
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("EXPR",24, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // EXPR ::= EXPR menos EXPR 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
           String a1 = (String) a;
           char rs1 = a1.charAt(0);

           String a2 = (String) b;
           char rs2 = a2.charAt(0);

           if (Character.isDigit(rs1) && Character.isDigit(rs2)) {
                double valor1 = Double.parseDouble((String) a);
                double valor2 = Double.parseDouble((String) b);
                if (valor1 % 1 == 0 && valor2 % 1 == 0) {
                      int r = (int) (valor1 - valor2);
                      System.out.println("El resultado de " + a + m + b + "=" + r);
                      RESULT = String.valueOf(r);
                }else if((valor1 % 1 != 0 && valor2 % 1 == 0)|| (valor1 % 1 == 0 && valor2 % 1 != 0)||((valor1 % 1 != 0 && valor2 % 1 != 0))){
                      Double r = (valor1 - valor2);
                      System.out.println("El resultado de " + a + m + b + "=" + r);
                      RESULT = String.valueOf(r);
                }
           }else if ((!Character.isDigit(rs1) && Character.isDigit(rs2))|| Character.isDigit(rs1) && !Character.isDigit(rs2)){
                    String valor1=(String)a;
                    String valor2=(String)b;
                    String r= valor1+"-"+valor2;
                    System.out.println("No es posible restar con Strings " + a + m + b + "= " + r);
                    RESULT=String.valueOf(r);
           }else {
                                    System.out.println("horror");
           }


        
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("EXPR",24, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // EXPR ::= EXPR mas EXPR 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
           String a1 = (String) a;
           char rs1 = a1.charAt(0);

           String a2 = (String) b;
           char rs2 = a2.charAt(0);

           if (Character.isDigit(rs1) && Character.isDigit(rs2)) {
                double valor1 = Double.parseDouble((String) a);
                double valor2 = Double.parseDouble((String) b);
                if (valor1 % 1 == 0 && valor2 % 1 == 0) {
                      int r = (int) (valor1 + valor2);
                      System.out.println("El resultado de " + a + m + b + "=" + r);
                      RESULT = String.valueOf(r);
                }else if((valor1 % 1 != 0 && valor2 % 1 == 0)|| (valor1 % 1 == 0 && valor2 % 1 != 0)){
                      Double r = (valor1 + valor2);
                      System.out.println("El resultado de " + a + m + b + "=" + r);
                      RESULT = String.valueOf(r);
                }
           }else if ((!Character.isDigit(rs1) && Character.isDigit(rs2))|| (Character.isDigit(rs1) && !Character.isDigit(rs2))|| (!Character.isDigit(rs1) && !Character.isDigit(rs2))){
                    String valor1=(String)a;
                    String valor2=(String)b;
                    String r= valor1+valor2;
                    r = r.replaceAll("\"", "");
                    System.out.println("El resultado de " + a + m + b + "= " + r);
                    RESULT=String.valueOf(r);
           }else {
                                    System.out.println("horror");
           }

        
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("EXPR",24, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // FUENTES ::= font asignacion cadena 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                        RESULT=a1.toString()+" face"+a2.toString()+a3.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("FUENTES",17, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // ALIGN ::= align asignacion cadena 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                        if(a3.equals("\"izquierda\"")){
                            RESULT=" "+a1.toString()+a2.toString()+"\"left\"";
                        }else if ((a3.equals("\"derecha\""))){
                            RESULT=" "+a1.toString()+a2.toString()+"\"right\" ";
                        }else if((a3.equals("\"centrado\""))){
                            RESULT=" "+a1.toString()+a2.toString()+"\"center\" ";
                        }else{
                        RESULT="";
                        System.out.println("Error semantico");
                        }
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("ALIGN",19, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // COLOR_ETIQUETA1 ::= textocolor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                  RESULT="textocolor";
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("COLOR_ETIQUETA1",14, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // COLOR_ETIQUETA1 ::= color 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                  RESULT="color";
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("COLOR_ETIQUETA1",14, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // COLOR_ETIQUETA ::= COLOR_ETIQUETA1 asignacion cadena 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                  if((a1.equals("textocolor"))&&(a3.equals("\"rojo\""))){
                         RESULT=" style"+a2.toString()+"\"color:red\";";
                      }else if((a1.equals("textocolor"))&& a3.equals("\"amarillo\"")){
                         RESULT=" style"+a2.toString()+"\"color:yellow\";";

                     }else if((a1.equals("textocolor"))&& a3.equals("\"azul\"")){
                      RESULT=" style"+a2.toString()+"\"color:blue\";";

                     }else if((a1.equals("textocolor"))&& a3.equals("\"verde\"")){
                        RESULT=" style"+a2.toString()+"\"color:green\";";

                     }else if((a1.equals("textocolor"))&& a3.equals("\"anaranjado\"")){
                        RESULT=" style"+a2.toString()+"\"color:orange\";";

                     }else if((a1.equals("textocolor"))&& a3.equals("\"morado\"")){
                        RESULT=" style"+a2.toString()+"\"color:purple\";";

                      }else if((a1.equals("textocolor"))&& a3.equals("\"gris\"")){
                        RESULT=" style"+a2.toString()+"\"color:gray\";";
                      }else if((a1.equals("color"))&& a3.equals("\"rojo\"")){
                        RESULT=" class=\"colorrojo\" ";
                      }else if((a1.equals("color"))&& a3.equals("\"amarillo\"")){
                        RESULT=" class=\"coloramarillo\" ";
                      }else if((a1.equals("color"))&& a3.equals("\"azul\"")){
                        RESULT=" class=\"colorazul\" ";
                      }else if((a1.equals("color"))&& a3.equals("\"verde\"")){
                        RESULT=" class=\"colorverde\" ";
                      }else if((a1.equals("color"))&& a3.equals("\"anaranjado\"")){
                        RESULT=" class=\"coloranaranjado\" ";                      
                      }else if((a1.equals("color"))&& a3.equals("\"gris\"")){
                        RESULT=" class=\"colorgris\" ";
                      }else if((a1.equals("color"))&& a3.equals("\"morado\"")){
                        RESULT=" class=\"colormorado\" ";
                      }else{
                        RESULT="";
                         System.out.println("Error semantico");
                  }
                  

                    
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("COLOR_ETIQUETA",13, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // ETIQUETAS1 ::= FUENTES 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                  RESULT=a1.toString();
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("ETIQUETAS1",20, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // ETIQUETAS1 ::= ALIGN 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                  RESULT=a1.toString();
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("ETIQUETAS1",20, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // ETIQUETAS1 ::= COLOR_ETIQUETA 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                  RESULT=a1.toString();
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("ETIQUETAS1",20, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // ETIQUETAS ::= ETIQUETAS1 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                  RESULT=a1.toString();
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("ETIQUETAS",18, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // ETIQUETAS ::= ETIQUETAS ETIQUETAS1 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                  RESULT=a1.toString()+a2.toString();
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("ETIQUETAS",18, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // CONDICION ::= para CONDICION parc 
            {
              Object RESULT =null;
		
                  RESULT="";
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CONDICION",31, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // CONDICION ::= CONDICION or CONDICION 
            {
              Object RESULT =null;
		
                  RESULT="";
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CONDICION",31, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // CONDICION ::= CONDICION and CONDICION 
            {
              Object RESULT =null;
		
                  RESULT="";
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CONDICION",31, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // CONDICION ::= not CONDICION 
            {
              Object RESULT =null;
		
                  RESULT="";
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CONDICION",31, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // CONDICION ::= EXPR mod EXPR 
            {
              Object RESULT =null;
		
                  RESULT="";
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CONDICION",31, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // CONDICION ::= EXPR distinto EXPR 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                    String a1 = (String) a;
                    char rs1 = a1.charAt(0);
            
                    String a2 = (String) b;
                    char rs2 = a2.charAt(0);

                    if (Character.isDigit(rs1) && Character.isDigit(rs2)) {
                        double valor1 = Double.parseDouble((String) a);
                        double valor2 = Double.parseDouble((String) b);
                        if (valor1 != valor2) {
                            String r = "true";
                            System.out.println("El resultado de " + a + m + b + "!=" + r);
                            RESULT = String.valueOf(r);
                        }else {
                            String r = "false";
                            System.out.println("El resultado de " + a + m + b + "!=" + r);
                            RESULT = String.valueOf(r);
                        }
                    }else {
                        RESULT=a1+m+a2;
                        System.out.println("Error Semantico");
                     }
               
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CONDICION",31, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // CONDICION ::= EXPR igual EXPR 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                    String a1 = (String) a;
                    char rs1 = a1.charAt(0);
            
                    String a2 = (String) b;
                    char rs2 = a2.charAt(0);

                    if (Character.isDigit(rs1) && Character.isDigit(rs2)) {
                        double valor1 = Double.parseDouble((String) a);
                        double valor2 = Double.parseDouble((String) b);
                        if (valor1 == valor2) {
                            String r = "true";
                            System.out.println("El resultado de " + a + m + b + "==" + r);
                            RESULT = String.valueOf(r);
                        }else {
                            String r = "false";
                            System.out.println("El resultado de " + a + m + b + "==" + r);
                            RESULT = String.valueOf(r);
                        }
                    }else {
                        RESULT=a1+m+a2;
                        System.out.println("Error Semantico");
                     }
               
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CONDICION",31, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // CONDICION ::= EXPR menorQ EXPR 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                    String a1 = (String) a;
                    char rs1 = a1.charAt(0);
            
                    String a2 = (String) b;
                    char rs2 = a2.charAt(0);

                    if (Character.isDigit(rs1) && Character.isDigit(rs2)) {
                        double valor1 = Double.parseDouble((String) a);
                        double valor2 = Double.parseDouble((String) b);
                        if (valor1 <= valor2) {
                            String r = "true";
                            System.out.println("El resultado de " + a + m + b + "<=" + r);
                            RESULT = String.valueOf(r);
                        }else {
                            String r = "false";
                            System.out.println("El resultado de " + a + m + b + "<=" + r);
                            RESULT = String.valueOf(r);
                        }
                    }else {
                        RESULT=a1+m+a2;
                        System.out.println("Error Semantico");
                     }
               
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CONDICION",31, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // CONDICION ::= EXPR mayorQ EXPR 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                    String a1 = (String) a;
                    char rs1 = a1.charAt(0);
            
                    String a2 = (String) b;
                    char rs2 = a2.charAt(0);

                    if (Character.isDigit(rs1) && Character.isDigit(rs2)) {
                        double valor1 = Double.parseDouble((String) a);
                        double valor2 = Double.parseDouble((String) b);
                        if (valor1 >= valor2) {
                            String r = "true";
                            System.out.println("El resultado de " + a + m + b + ">=" + r);
                            RESULT = String.valueOf(r);
                        }else {
                            String r = "false";
                            System.out.println("El resultado de " + a + m + b + ">=" + r);
                            RESULT = String.valueOf(r);
                        }
                    }else {
                        RESULT=a1+m+a2;
                        System.out.println("Error Semantico");
                     }
               
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CONDICION",31, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // CONDICION ::= EXPR menor EXPR 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                    String a1 = (String) a;
                    char rs1 = a1.charAt(0);
            
                    String a2 = (String) b;
                    char rs2 = a2.charAt(0);

                    if (Character.isDigit(rs1) && Character.isDigit(rs2)) {
                        double valor1 = Double.parseDouble((String) a);
                        double valor2 = Double.parseDouble((String) b);
                        if (valor1 < valor2) {
                            String r = "true";
                            System.out.println("El resultado de " + a + m + b + "<" + r);
                            RESULT = String.valueOf(r);
                        }else {
                            String r = "false";
                            System.out.println("El resultado de " + a + m + b + "<" + r);
                            RESULT = String.valueOf(r);
                        }
                    }else {
                        RESULT=a1+m+a2;
                        System.out.println("Error Semantico");
                     }
               
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CONDICION",31, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // CONDICION ::= EXPR mayor EXPR 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                    String a1 = (String) a;
                    char rs1 = a1.charAt(0);
            
                    String a2 = (String) b;
                    char rs2 = a2.charAt(0);

                    if (Character.isDigit(rs1) && Character.isDigit(rs2)) {
                        double valor1 = Double.parseDouble((String) a);
                        double valor2 = Double.parseDouble((String) b);
                        if (valor1 > valor2) {
                            String r = "true";
                            System.out.println("El resultado de " + a + m + b + "=" + r);
                            RESULT = String.valueOf(r);
                        }else {
                            String r = "false";
                            System.out.println("El resultado de " + a + m + b + "=" + r);
                            RESULT = String.valueOf(r);
                        }
                    }else {
                        RESULT=a1+m+a2;
                        System.out.println("Error Semantico");
                     }
               
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CONDICION",31, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // VARIABLES ::= id asignacion RESULT 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString()+a2.toString()+a3.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("VARIABLES",29, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // VARIABLES ::= id asignacion CONDICION 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString()+a2.toString()+a3.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("VARIABLES",29, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // VARIABLES ::= id asignacion EXPR 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString()+a2.toString()+a3.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("VARIABLES",29, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // VARIABLES ::= id EXPR 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString()+a2.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("VARIABLES",29, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // VARIABLES ::= id 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("VARIABLES",29, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // VARIABLES ::= VARIABLES coma id asignacion CONDICION 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("VARIABLES",29, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // VARIABLES ::= VARIABLES coma id asignacion RESULT 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("VARIABLES",29, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // VARIABLES ::= VARIABLES coma id asignacion EXPR 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("VARIABLES",29, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // VARIABLES ::= VARIABLES coma id EXPR 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("VARIABLES",29, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // VARIABLES ::= VARIABLES coma id 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString()+a2.toString()+a3.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("VARIABLES",29, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // RESULT ::= result pto id pto id 
            {
              Object RESULT =null;
		int rleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int pto1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int pto1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object pto1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int id1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int id1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object id1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int pto2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int pto2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object pto2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int id2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int id2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object id2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=r.toString()+pto1.toString()+id1.toString()+pto2.toString()+id2.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("RESULT",40, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // RESULT ::= result pto id cora num corc pto id 
            {
              Object RESULT =null;
		int rleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object p = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		
                RESULT=r.toString()+p.toString()+id.toString()+c.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("RESULT",40, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // RESULT ::= result pto id 
            {
              Object RESULT =null;
		int rleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int rright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object r = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object p = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=r.toString()+p.toString()+id.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("RESULT",40, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // SENTENCIAS1 ::= E 
            {
              Object RESULT =null;

              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS1",27, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // SENTENCIAS1 ::= RESULT ptoYcoma 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                        RESULT=a1.toString()+a2.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS1",27, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // SENTENCIAS1 ::= id asignpor RESULT ptoYcoma 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		
                        RESULT=a1.toString()+a2.toString()+a3.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS1",27, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // SENTENCIAS1 ::= id asignpor EXPR ptoYcoma 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		
                        RESULT=a1.toString()+a2.toString()+a3.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS1",27, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // SENTENCIAS1 ::= id asignmenos RESULT ptoYcoma 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		
                        RESULT=a1.toString()+a2.toString()+a3.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS1",27, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // SENTENCIAS1 ::= id asignmenos EXPR ptoYcoma 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		
                        RESULT=a1.toString()+a2.toString()+a3.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS1",27, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // SENTENCIAS1 ::= id asignmas RESULT ptoYcoma 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		
                        RESULT=a1.toString()+a2.toString()+a3.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS1",27, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // SENTENCIAS1 ::= id asignmas EXPR ptoYcoma 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		
                        RESULT=a1.toString()+a2.toString()+a3.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS1",27, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // SENTENCIAS1 ::= id menosmenos ptoYcoma 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                        RESULT=a1.toString()+a2.toString()+a3.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS1",27, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // SENTENCIAS1 ::= id masmas ptoYcoma 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                        RESULT=a1.toString()+a2.toString()+a3.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS1",27, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // SENTENCIAS1 ::= VARIABLES ptoYcoma 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                        RESULT=a1.toString()+a2.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS1",27, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // SENTENCIAS1 ::= TIPODATOS VARIABLES ptoYcoma 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                        RESULT=a1.toString()+a2.toString()+a3.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS1",27, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // SENTENCIAS1 ::= print para RESULT parc ptoYcoma 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                        RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS1",27, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // SENTENCIAS1 ::= print para CONDICION parc ptoYcoma 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                        RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS1",27, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // SENTENCIAS1 ::= print para EXPR parc ptoYcoma 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                        RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS1",27, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // SENTENCIAS ::= SENTENCIAS1 
            {
              Object RESULT =null;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                        RESULT=a3.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS",26, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // SENTENCIAS ::= SENTENCIAS SENTENCIAS1 
            {
              Object RESULT =null;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                        RESULT=a2.toString()+a3.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("SENTENCIAS",26, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // TRBODY ::= SENTENCIAS 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TRBODY",34, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // TRBODY ::= CUERPO_BODY 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TRBODY",34, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // TEXTO ::= TEXTO1 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TEXTO",21, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // TEXTO ::= TEXTO TEXTO1 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString()+" "+a2.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TEXTO",21, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // H ::= menor h6 mayor menor div h6 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // H ::= menor h6 ETIQUETAS mayor menor div h6 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // H ::= menor h6 mayor CUERPO_BODY menor div h6 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // H ::= menor h6 ETIQUETAS mayor CUERPO_BODY menor div h6 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a9left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a9right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a9 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString()+a9.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // H ::= menor h5 mayor menor div h5 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // H ::= menor h5 ETIQUETAS mayor menor div h5 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // H ::= menor h5 mayor CUERPO_BODY menor div h5 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // H ::= menor h5 ETIQUETAS mayor CUERPO_BODY menor div h5 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a9left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a9right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a9 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString()+a9.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // H ::= menor h4 mayor menor div h4 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // H ::= menor h4 ETIQUETAS mayor menor div h4 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // H ::= menor h4 mayor CUERPO_BODY menor div h4 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // H ::= menor h4 ETIQUETAS mayor CUERPO_BODY menor div h4 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a9left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a9right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a9 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString()+a9.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // H ::= menor h3 mayor menor div h3 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // H ::= menor h3 ETIQUETAS mayor menor div h3 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // H ::= menor h3 mayor CUERPO_BODY menor div h3 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // H ::= menor h3 ETIQUETAS mayor CUERPO_BODY menor div h3 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a9left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a9right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a9 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString()+a9.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // H ::= menor h2 mayor menor div h2 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+" "+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // H ::= menor h2 ETIQUETAS mayor menor div h2 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+" "+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // H ::= menor h2 mayor CUERPO_BODY menor div h2 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+" "+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // H ::= menor h2 ETIQUETAS mayor CUERPO_BODY menor div h2 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a9left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a9right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a9 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+" "+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString()+a9.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // H ::= menor h1 mayor menor div h1 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+" "+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // H ::= menor h1 ETIQUETAS mayor menor div h1 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+" "+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // H ::= menor h1 mayor CUERPO_BODY menor div h1 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a9left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a9right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a9 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+" "+a3.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString()+a9.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // H ::= menor h1 ETIQUETAS mayor CUERPO_BODY menor div h1 mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a9left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a9right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a9 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+" "+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString()+a9.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("H",8, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // P ::= menor p mayor menor div p mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("P",23, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // P ::= menor p ETIQUETAS mayor menor div p mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("P",23, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // P ::= menor p mayor CUERPO_BODY menor div p mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("P",23, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // P ::= menor p ETIQUETAS mayor CUERPO_BODY menor div p mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a9left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a9right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a9 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString()+a9.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("P",23, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // TABLE4 ::= TABLE4 tda CUERPO_BODY tdc 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TABLE4",37, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // TABLE4 ::= TABLE4 tha CUERPO_BODY thc 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TABLE4",37, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // TABLE4 ::= TABLE4 tda tdc 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TABLE4",37, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // TABLE4 ::= TABLE4 tha thc 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TABLE4",37, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // TABLE4 ::= tda CUERPO_BODY tdc 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TABLE4",37, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // TABLE4 ::= tha CUERPO_BODY thc 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TABLE4",37, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // TABLE4 ::= tda tdc 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TABLE4",37, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // TABLE4 ::= tha thc 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TABLE4",37, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // TABLE2 ::= menor tr mayor menor div tr mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TABLE2",35, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // TABLE2 ::= menor tr mayor TABLE4 menor div tr mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TABLE2",35, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // TABLE1 ::= TABLE2 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                   RESULT=a1.toString();           
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TABLE1",33, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // TABLE1 ::= TABLE1 TABLE2 
            {
              Object RESULT =null;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                   RESULT=a2.toString()+a1.toString();           
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TABLE1",33, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // TABLE ::= menor table mayor TABLE1 ctable 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TABLE",32, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // TABLE ::= menor table ETIQUETAS mayor TABLE1 ctable 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TABLE",32, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // TABLE ::= menor table mayor ctable 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TABLE",32, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // TABLE ::= menor table ETIQUETAS mayor ctable 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TABLE",32, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // DIVHTML ::= menor divhtml mayor CUERPO_BODY menor div divhtml mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                    RESULT=a1.toString()+a2.toString()+a4.toString()+a8.toString()+a5.toString()+a6.toString()+a7.toString();
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("DIVHTML",9, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // DIVHTML ::= menor divhtml mayor menor div divhtml mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                    RESULT=a1.toString()+a2.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString();
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("DIVHTML",9, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // DIVHTML ::= menor divhtml ETIQUETAS mayor CUERPO_BODY menor div divhtml mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                    RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a8.toString()+a5.toString()+a6.toString()+a7.toString();
                 
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("DIVHTML",9, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // DIVHTML ::= menor divhtml ETIQUETAS mayor menor div divhtml mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                    RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString();
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("DIVHTML",9, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CUERPO_BODY1 ::= num 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPO_BODY1",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CUERPO_BODY1 ::= dolar dolar SENTENCIAS dolar dolar 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                        RESULT=a3.toString();
                    
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPO_BODY1",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CUERPO_BODY1 ::= caracter 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPO_BODY1",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // CUERPO_BODY1 ::= cadena 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPO_BODY1",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // CUERPO_BODY1 ::= id 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString();
            
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPO_BODY1",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // CUERPO_BODY1 ::= TABLE 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                   RESULT=a1.toString();           
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPO_BODY1",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // CUERPO_BODY1 ::= P 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                   RESULT=a1.toString();           
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPO_BODY1",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // CUERPO_BODY1 ::= H 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                   RESULT=a1.toString();           
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPO_BODY1",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // CUERPO_BODY1 ::= DIVHTML 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                   RESULT=a1.toString();           
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPO_BODY1",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // CUERPO_BODY1 ::= menor div hr mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                   RESULT=a1.toString()+a2.toString()+a3.toString();           
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPO_BODY1",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // CUERPO_BODY1 ::= menor hr mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                   RESULT=a1.toString()+a2.toString()+a3.toString();           
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPO_BODY1",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // CUERPO_BODY1 ::= menor br mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                   RESULT=a1.toString()+a2.toString()+a3.toString();           
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPO_BODY1",6, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // CUERPO_BODY ::= CUERPO_BODY1 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                   RESULT=a1.toString();           
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPO_BODY",5, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // CUERPO_BODY ::= CUERPO_BODY CUERPO_BODY1 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                   RESULT=a1.toString()+" "+a2.toString();
                
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPO_BODY",5, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // BODY ::= menor body ETIQUETAS mayor menor div body mayor menor div html mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-11)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-11)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-11)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-10)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-10)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-10)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-9)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-9)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-9)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a9left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a9right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a9 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a10left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a10right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a10 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a11left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a11right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a11 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a12left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a12right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a12 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             String css="<style> .colorazul{background-color:blue;} .colorrojo{background-color:red;}.coloramarillo{background-color:yellow;}.colorverde{background-color:green;}.colorgris{background-color:gray;}.coloranaranjado{background-color:#D35400;}.colormorado{background-color:purple;}</style>";
             RESULT=a1.toString()+a2.toString()+ c.toString()+a3.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString()+a9.toString()+a10.toString()+a11.toString()+a12.toString()+css;
        
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("BODY",11, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-11)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // BODY ::= menor body ETIQUETAS mayor CUERPO_BODY menor div body mayor menor div html mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-12)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-12)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-12)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-11)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-11)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-11)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-10)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-10)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-10)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-9)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-9)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-9)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a9left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a9right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a9 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a10left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a10right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a10 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a11left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a11right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a11 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a12left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a12right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a12 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             String css="<style> .colorazul{background-color:blue;} .colorrojo{background-color:red;}.coloramarillo{background-color:yellow;}.colorverde{background-color:green;}.colorgris{background-color:gray;}.coloranaranjado{background-color:#D35400;}.colormorado{background-color:purple;}</style>";
             RESULT=a1.toString()+a2.toString()+ c.toString() +a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString()+a9.toString()+a10.toString()+a11.toString()+a12.toString()+css;
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("BODY",11, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-12)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // BODY ::= menor body mayor menor div body mayor menor div html mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-10)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-10)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-10)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-9)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-9)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-9)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a9left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a9right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a9 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a10left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a10right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a10 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a11left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a11right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a11 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a12left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a12right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a12 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             String css="<style> .colorazul{background-color:blue;} .colorrojo{background-color:red;}.coloramarillo{background-color:yellow;}.colorverde{background-color:green;}.colorgris{background-color:gray;}.coloranaranjado{background-color:#D35400;}.colormorado{background-color:purple;}</style>";
             RESULT=a1.toString()+a2.toString()+a3.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString()+a9.toString()+a10.toString()+a11.toString()+a12.toString()+css;
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("BODY",11, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-10)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // BODY ::= menor body mayor CUERPO_BODY menor div body mayor menor div html mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-11)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-11)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-11)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-10)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-10)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-10)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-9)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-9)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-9)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a9left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a9right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a9 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a10left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a10right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a10 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a11left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a11right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a11 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a12left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a12right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a12 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             String css="<style> .colorazul{background-color:blue;} .colorrojo{background-color:red;}.coloramarillo{background-color:yellow;}.colorverde{background-color:green;}.colorgris{background-color:gray;}.coloranaranjado{background-color:#D35400;}.colormorado{background-color:purple;}</style>";
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString()+a9.toString()+a10.toString()+a11.toString()+a12.toString()+css;
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("BODY",11, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-11)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // TITLE ::= menor title mayor CUERPO_BODY menor div title mayor 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+"<br>"+a5.toString()+a6.toString()+a7.toString()+a8.toString();
          
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("TITLE",4, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // CUERPOHTML ::= menor head mayor menor div head mayor BODY 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a9left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a9right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a9 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString()+a2.toString()+a3.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString()+a9.toString();
             
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPOHTML",3, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // CUERPOHTML ::= menor head mayor CUERPO_BODY menor div head mayor BODY 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a9left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a9right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a9 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString()+a9.toString();
             
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPOHTML",3, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // CUERPOHTML ::= menor head mayor TITLE menor div head mayor BODY 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-7)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-6)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-5)).value;
		int a5left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).left;
		int a5right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).right;
		Object a5 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-4)).value;
		int a6left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a6right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a6 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a7left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a7right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a7 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a8left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a8right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a8 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a9left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a9right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a9 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
                RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString()+a5.toString()+a6.toString()+a7.toString()+a8.toString()+a9.toString();
             
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("CUERPOHTML",3, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-8)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO1 ::= menor html mayor CUERPOHTML 
            {
              Object RESULT =null;
		int a1left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).left;
		int a1right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).right;
		Object a1 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)).value;
		int a2left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).left;
		int a2right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).right;
		Object a2 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-2)).value;
		int a3left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int a3right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object a3 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		int a4left = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int a4right = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a4 = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		
             RESULT=a1.toString()+a2.toString()+a3.toString()+a4.toString(); 
           
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("INICIO1",2, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-3)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= INICIO1 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.peek()).value;
		 System.out.println(a); 
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          return CUP$Sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)).value;
		RESULT = start_val;
              CUP$Sintactico$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintactico$stack.elementAt(CUP$Sintactico$top-1)), ((java_cup.runtime.Symbol)CUP$Sintactico$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintactico$parser.done_parsing();
          return CUP$Sintactico$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

